head	1.4;
access;
symbols;
locks
	dutky:1.4; strict;
comment	@# @;


1.4
date	2020.05.04.02.01.34;	author dutky;	state Exp;
branches;
next	1.3;

1.3
date	2020.05.02.20.19.34;	author dutky;	state Exp;
branches;
next	1.2;

1.2
date	2020.05.02.19.37.49;	author dutky;	state Exp;
branches;
next	1.1;

1.1
date	2020.05.02.15.50.49;	author dutky;	state Exp;
branches;
next	;


desc
@initial checkpoint
@


1.4
log
@checkpoint
@
text
@---
title: "Montgomery County Housing Code Violations: Code II"
author: "sdd"
date: "5/1/2020"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

#   Generate Visualations

```{r eval=FALSE}
#  rcs revision history

#$Log: 05mcHcvGenVisualizons.Rmd,v $
#Revision 1.3  2020/05/02 20:19:34  dutky
#added alluvial plots.
#
#Revision 1.2  2020/05/02 19:37:49  dutky
#checkpoint
#
#Revision 1.1  2020/05/02 15:50:49  dutky
#Initial revision
#
#

```

```{r}
# Load Libaries
library(plyr) # must be loaded before tidyverse
library(tidyverse)
library(Hmisc)
library(lubridate)
library(pander)
library(ggmap)
library(sf)
library(sp)
library(tidygeocoder)
library(purrr)
library(spatial)
library(ggspatial)
library(scales)
library(ggalluvial)
library(ggthemes)
library(geosphere)
library(leaflet)
```

```{r }
# load data
load("wrangled.Rdata")
```

```{r eval = FALSE}
pander(codeReferencesCategoriesSeverity %>%
         select(frequency,violationClass,violationSeverity,violationCategory,codeReference) %>%
         arrange(violationClass,violationCategory))
```

```{r eval = FALSE}
pander(codeReferencesCategoriesSeverity %>%
         select(violationClass,violationSeverity,codeReference, descr) %>%
         mutate(descr=substr(descr,1,26)) %>%
         arrange(violationClass,desc( violationSeverity)))
```

```{r}

alluvialBasePlot<- hcvSample %>%
           ggplot( aes(y=count,
                  axis1=year,
                  axis2=origin,
                  axis3=violationClass,
                  axis4=violationSeverity,
                  axis5=daysOpen,
                  axis6=corrected
                  )
              )+
              geom_alluvium(aes(fill=year), width = 1/12, knot.pos = 1/6,
                            reverse = FALSE, show.legend = TRUE
                            ) +
#              guides(fill=FALSE) +
              geom_stratum(width = 1/5, reverse = FALSE) +
              geom_label(stat = "stratum", vjust="center", infer.label=TRUE, reverse=FALSE)+
              scale_x_continuous(breaks = 1:6, 
                                 labels = c("Year Filed","Origin","Violation Class",
                                            "Violation Severity","Days Open","Close Status")
              ) +
              scale_y_continuous(position = "left")+
              scale_fill_brewer(type = "qual",palette = "Set1")+
              theme_economist()+
              ggtitle("Sampled Housing Code Violations 2013-2019")
  
          

```

```{r}


alluvialDistDirPlot<- hcvSample %>%
  
           ggplot( aes(y=count,
                  axis1=year,
                  axis2=distance,
                  axis3=violationClass,
                  axis4=violationSeverity,
                  axis5=daysOpen,
                  axis6=corrected
                  )
              )+
              geom_alluvium(aes(fill=direction), width = 1/12, knot.pos = 1/6,
                            reverse = FALSE, show.legend = TRUE
                            ) +
#              guides(fill=FALSE) +
              geom_stratum(width = 1/5, reverse = FALSE) +
              geom_label(stat = "stratum", vjust="center", infer.label=TRUE, reverse=FALSE)+
              scale_x_continuous(breaks = 1:6, 
                                 labels = c("Year Filed","Distance","Violation Class",
                                            "Violation Severity","Days Open","Close Status")
              ) +
              scale_fill_brewer(type = "qual",palette = "Set1")+
              scale_y_continuous(position = "left")+
              theme_economist()+
              ggtitle("Sampled Housing Code Violations 2013-2019") +
              labs( caption="Distance and Direction from County Center")
  
          

```

```{r}

alluvialHabitabilityPlot<- hcvSample %>%
            filter(violationClass=="habitability") %>%
  
           ggplot( aes(y=count,
                  axis1=year,
                  axis2=origin,
                  axis3=violationCategory,
                  axis4=violationSeverity,
                  axis5=daysOpen,
                  axis6=corrected
                  )
              )+
              geom_alluvium(aes(fill=year), width = 1/12, knot.pos = 1/6,
                            reverse = FALSE, show.legend = TRUE
                            ) +
#             guides(fill=FALSE) +
              geom_stratum(width = 1/5, reverse = FALSE) +
              geom_label(stat = "stratum", vjust="center", infer.label=TRUE, reverse=FALSE)+
              scale_x_continuous(breaks = 1:6, 
                                 labels = c("Year Filed","Origin","Violation Category",
                                            "Violation Severity","Days Open","Close Status")
              ) +
              scale_fill_brewer(type = "qual",palette = "Set1")+
              scale_y_continuous(position = "left")+
              theme_economist()+
              ggtitle("Sampled Housing Habitability Code Violations 2013-2019")
  
          

```

```{r}

alluvialSafetyPlot<- hcvSample %>%
            filter(violationClass=="safety") %>%
  
           ggplot( aes(y=count,
                  axis1=year,
                  axis2=origin,
                  axis3=violationCategory,
                  axis4=violationSeverity,
                  axis5=daysOpen,
                  axis6=corrected
                  )
              )+
              geom_alluvium(aes(fill=year), width = 1/12, knot.pos = 1/6,
                            reverse = FALSE, show.legend = TRUE
                            ) +
#             guides(fill=FALSE) +
              geom_stratum(width = 1/5, reverse = FALSE) +
              geom_label(stat = "stratum", vjust="center", infer.label=TRUE, reverse=FALSE)+
              scale_x_continuous(breaks = 1:6, 
                                 labels = c("Year Filed","Origin","Violation Category",
                                            "Violation Severity","Days Open","Close Status")
              ) +
              scale_fill_brewer(type = "qual",palette = "Set1")+
              scale_y_continuous(position = "left")+
              theme_economist()+
              ggtitle("Sampled Housing Code Safety Violations 2013-2019")
  
          

```

```{r}

# generate block group summary of housing code violations by year
genBgHcvSummaryHtml<-function(bg) {
       hcvSummary %>%
         filter(bg2010==bg) %>%
         group_by(year) %>%
         summarise(
           properties=n_distinct(address),
           cases=sum(cases),
           violations=sum(violations),
           totalSeverity=sum(totalSeverity)
         ) %>%
        arrange(year)
}

```

```{r}
# generate html for leaflet base map
bgHtml <- bgDemographics %>%
        mutate_all(as.character) %>%
        mutate(logSeverity=round(as.numeric(logSeverity),digits = 3)) %>%
        rowwise() %>%
        mutate(html=paste(sep="",
            '<center><a href="#here" target="_blank">Census Block ',blockGroup,'</a></center><br>', # link to bg detail map
#            '<center><a href="#',bg2010,'">Census Block ',blockGroup,'</a></center><br>', # link to bg detail map
            html(file=FALSE,
                 as.data.frame(
                   col.names=c("properties","dwellings","ownerOcc","rentals","trouble"),
                   list(properties,dwellings,ownerOccupied,rentals,troubledProperties)
                 )
            ),"<br><center>Building Median Values</center><br>",
            html(file=FALSE,rownames=TRUE,header=c("categories","owners","renters"),
                 as.data.frame(
                    rbind(c(medianOwnerBldgQuality,medianRenterBldgQuality),
                          c(medianOwnerSqFt,medianRenterSqFt),
                          c(medianOwnerLastSale,medianRentalLastSale),
                          c(medianOwnerYearBuilt,medianRentalYearBuilt),
                          c(ownersMedianMoveIn,rentersMedianMoveIn),
                          c(ownersMedianPeoplePerRoom,rentersMedianPeoplePerRoom)
                    ),
                    col.names=c("category","owners","renters"),
                    row.names=c("bldgQuality (9best)","sqFt","lastSale","yearBuilt","moveInDate","peoplePerRoom")
                 )
              ),"<br><center>Tally of Housing Code Violations</center><br>",
              html(file=FALSE,genBgHcvSummaryHtml(bg2010))
            )
        ) %>%
        select(bg2010,blockGroup,logSeverity,html)
            
```

```{r}
# generate baseMap

pal<-colorNumeric("Spectral",domain=(bgHtml$logSeverity),reverse = TRUE)

baseMap<-leaflet(bgDemographics) %>% 
  addTiles() %>%
  setView(-77.1607098, 39.000, zoom = 10) %>%
  addPolygons(color = "black",fill=TRUE,  fillColor = pal(bgHtml$logSeverity), fillOpacity = .5 ) %>%
  addCircleMarkers(lng=~longitude,lat=~latitude,
             popup = bgHtml$html,
             radius=5,
             clusterOptions = markerClusterOptions()
  ) %>%
  addLegend(pal = pal,
            values = quantile(bgHtml$logSeverity),
            opacity = 0.7,
            title = "log of Total Severity",
            position = "bottomright") 
```

```{r}

# summarise properties in block group by address generate html for leaflet plot

getProps<-function(bg) {
    yearsSummary<-function(bg,addr) {
      df<-p %>%
        filter(address==address) %>%
              group_by(year) %>%
              summarise(
                  cases=sum(cases),
                  violations=sum(violations),
                  totalSeverity=sum(totalSeverity)
              ) %>%
              select(year,cases,violations,totalSeverity) 
      df
    }
    
    p<- hcvSummary %>%
        filter(bg2010==bg)
    
    props<- p %>%
        group_by(address,longitude,latitude,bg2010,blockGroup) %>%
        summarise(
          cases=sum(cases),
          violations=sum(violations),
          totalSeverity=sum(totalSeverity+1,na.rm = TRUE),
          logSeverity=log10(totalSeverity),
          troubled=any(troubled)
        ) %>%
         mutate(html=paste(sep="",
                  "<center><strong>",
                  address,"<br>",
                  ifelse(troubled,"Troubled Property<br>",""),
                  "Census Block Group ",blockGroup,
                   html(file=FALSE,header=c("year","cases","violations","totalSeverity"),
                        yearsSummary(bg2010,address)
                        ),
                  '<br><left><a href="#basemap">basemap</a>',
                  '<p style=<right><a href="#toc"><toc></a>'
#                  '<br><left><a href="#basemap">basemap</a><right><a href="#toc"><toc></a>'
              )
          )
    
    props
}

```

```{r}

      
# generate maps showing properties in each Block Group

genBgMap<-function(df){
  

  props<-getProps(df$bg2010)
  
  pal<-colorNumeric("Spectral",domain=(props$logSeverity),reverse = TRUE)
  
  
    map<-leaflet(df) %>%
        addTiles() %>%
        setView(df$longitude, df$latitude, zoom=14) %>%
        addPolygons(color="black") %>%
        addCircleMarkers(lng=props$longitude,lat=props$latitude,
                         popup = props$html,
                         color = pal(props$logSeverity),
                         radius=log10(props$violations)+10,
                         clusterOptions = markerClusterOptions()
        ) %>%
        addLegend( pal=pal,
                   opacity = 0.7,
                   values = quantile(props$logSeverity),
                   title="Log of Total Severity",
                   position = "bottomright"
        )           
  map                 
}
```
```{r}

bgMap<-list()
for(i in 1:nrow(bgDemographics)) bgMap[[i]]<- bgDemographics[i,] %>% genBgMap(.)


```

[MASTER](#master)

```{r}
baseMap
```


{#here}

```{r}

bgMap[[1]]

```


@


1.3
log
@added alluvial plots.
@
text
@d18 3
d31 38
@


1.2
log
@checkpoint
@
text
@d18 3
d29 130
@


1.1
log
@Initial revision
@
text
@d17 4
a20 1
#$Log$
d47 1
a47 1
bgHtml <- bgDemo %>%
d85 1
a85 1
baseMap<-leaflet(bgDemo) %>% 
d185 1
a185 1
for(i in 1:nrow(bgDemo)) bgMap[[i]]<- bgDemo[i,] %>% genBgMap(.)
@
