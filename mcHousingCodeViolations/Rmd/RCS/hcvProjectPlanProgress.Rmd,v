head	1.2;
access;
symbols;
locks
	dutky:1.2; strict;
comment	@# @;


1.2
date	2020.04.20.21.41.15;	author dutky;	state Exp;
branches;
next	1.1;

1.1
date	2020.04.19.18.36.46;	author dutky;	state Exp;
branches;
next	;


desc
@init
@


1.2
log
@added cat of Rmd source code in last chunk
@
text
@---
title: "Progress Report: Housing Code Enforcement Project Plan"
author: "Steve Dutky Montgomery College"
date: "4/12/2020"
output: html_document
---

```{r eval=FALSE}

#$Log: hcvProjectPlanProgress.Rmd,v $
#Revision 1.1  2020/04/19 18:36:46  dutky
#Initial revision
#

```

```{r setup, eval=TRUE,include=FALSE}
knitr::opts_chunk$set(echo = FALSE,warning = FALSE, message = FALSE, error = FALSE)
```
```{r}
# load libraries
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(ggalluvial)
library(pander)
library(Hmisc)
```

```{r}
load("projectProgress.Rdata")
```


### **Herein:** {#sddSection0}
*   **[Progress Summary](#sddSection1)**
*   **[Revised Statistics](#sddSection2)**
*   **[Categories of Code Infractions and Severity](#sddSection3)**
*   **[Cleaning and Summary of the HCV Data Set](#sddSection4)**
*   **[Cleaning and Summary of the mcRentalsPp Data Set](#sddSection5)**
*   **[Summary of the mcPp Data Set](#sddSection6)**
*   **[Summary of the mc311hca Data Set](#sddSection7)**
*   **[Visualizations: Alluvial Plots Overview](#sddSection8)**
*   **[Visualizations: Alluvial Plots by Date and Distance](#sddSection8a)**
*   **[Visualizations: Alluvial Plots by Habitability and Safety](#sddSection8b)**
*   **[Data Sources](#sddSection9)**
*   **[Rmd Code](#sddSection10)**

******

### **Progress Summary** {#sddSection1}
[{previous}](#sddSection0)|[{toc}](#sddSection0)|[{next}](#sddSection2)
---------------|------------|----------
<br>

>  This is a follow up to [Housing Code Enforcement Project Plan](https://rpubs.com/sdutky/588945) which cites the data sources for this project, provides some preliminary statistics,  and poses some questions whose answers can hopefully be found in the data.  
  
>  Since then:    

*  Because of the variable access performancee and permanence of the data sets, I uploaded snapshots of them to my [GitHub account]().  My R programs and scripts will access them from there.

*  I have purged the Housing Code Violation (HCV) data set of all records that did not cite a code reference or had a disposition of "no violations found".

*  I have assigned geocoordinates where the HCV had none. Using these geocoordinates, I associated each violation to a U.S. Census Block group.

*  Working from the County Code, I have constructed a data set that categorizes code references and assigns to a severity code of 1-5 (5 is most severe) and joined these to the HCV.

*  I have culled rental properties (mcRentalPp) from the Maryland Parcel Points data set (mcPp).

*  I have made alluvial plots that relate the features of the HCV.

*  Except for a trivial number of records, I failed to join the HCV and the mcRentalPp by either geocoordinates or street address.  

>  Remaining

*  Join the HCV and Troubled Property data sets. Devise a model for the likelihood that an HCV property becomes a troubled property.  

*  Produce geospatial plots of violations within census block groups.  Provide a meaningful way of navigating between block groups.

*  Identify a story that can be told from the data. Illustrate it with alluvial plots or animated geospatial plots.


### **Revised Statistics** {#sddSection2}
[{previous}](#sddSection1)|[{toc}](#sddSection0)|[{next}](#sddSection3)
---------------|------------|----------
<br>

>  These were included in the Project Plan.  Since cleaning:
<br><center> **Summary of Residential Rental Properties in Montgomery County**

```{r}

pander(summaryRentals)

```
<br>  **Summary of Housing Code Violations 2013-2019**

```{r}

pander(cn311)

```

</center>

### **Categories of Code Infractions and Severity** {#sddSection3}
[{previous}](#sddSection2)|[{toc}](#sddSection0)|[{next}](#sddSection4)
---------------|------------|----------
<br>

>  This is my take summarizing the County's Housing Code collapsing the sixty six infractions into twelve categories. This is still to many to render in a plot so I squeezed these down to classes: safety, security, habitability, and compliance:
<br>
<center>**Summary of Housing Code [Infractions](http://montgomeryco-md.elaws.us/code/coor_ptii)**</center>

```{r}
a<-codeReferencesCategoriesSeverity
names(a)<-c("code","freq","collator","descr","category","severity","class")

pander(a %>%
         select(freq,category,severity,code,descr) %>%
         mutate(descr=substr(descr,1,30)) %>%
         arrange(category,desc(freq))
)
```

### **Cleaning and Summary of the HCV Data Set** {#sddSection4}
[{previous}](#sddSection3)|[{toc}](#sddSection0)|[{next}](#sddSection5)
---------------|------------|----------
<br>

> The cleaning of the HCV data set entailed dropping rows where there was either no cited violation or the disposition indicated that no violations were found. There were approximately 2000 rows where both longitude and latitude were zero.  For these I constructed a lower case mailing address containing no double spaces and no punctuation other than space.  Using the geocode function of the [tidycoder library](https://cran.r-project.org/web/packages/tidygeocoder/vignettes/tidygeocoder.html) the addresses were matched against the [U.S. Census TIGER/Line database](https://www.census.gov/geographies/mapping-files/time-series/geo/tiger-geodatabase-file.html) first, and, if that failed to return geocoordinates, [Open Street Map](https://www.openstreetmap.org/about). This succeeded except for fewer than 100 rows which were dropped.

>  Using the [sp and sf geospatial libraries](https://cran.r-project.org/web/packages/sf/vignettes/sf1.html) and the arcGis shape file from Data Montgomery of the County's census block groups, the geocoordinates of only 279 violations failed to match a census block group.  The block group will allow the underlying conditions discernable from the mcPp data set and the U.S. Census 2018 American Community Survey to be paired with each row in the HCV.

<br><center> **Hmisc describe output:** </center>

```{r}

html(desc_hcv)

```


### **Cleaning and Summary of the mcRentalsPp Data Set** {#sddSection5}
[{previous}](#sddSection4)|[{toc}](#sddSection0)|[{next}](#sddSection6)
---------------|------------|----------
<br>

>  The mcRentalsPp data set was intended to contain all of the current rental properties in Montgomery County isolated from mcPp, the Maryland Parcel Points data set filtered to Montgomery County.  I first thought I could filter for properties flagged as residential in the 2010 census (resi2010=="0") that were not owner occupied.  This left in a variety of parking spaces, lots, and graveyards.  Extending the filter to exclude properties without street addresses and allow only specific Land Use and Building description produced more reasonable results.


```{r eval=FALSE,echo=TRUE}
 filter(resi2010=="0",
             !is.na(streetNam),
             ownerOccupancy=="N",
             descLandUse %in% c("Residential","Residential Condominium","Apartments"),
             descBldg %in% c(
                 "SF",
                 "DWEL Standard Unit",
                 "DWEL Condominium Garden Unit",
                 "DWEL Center Unit",
                 "DWEL Condominium High Rise",
                 "DWEL End Unit",
                 "DWEL Condominium Townhouse",
                 "DWEL Split Level",
                 "AP",
                 "DWEL Split Foyer",
                 "HOUSING Apartment(s)",
                 "HOUSING Residence Multiple",
                 "CARE Home for the Elderly"
             )
```


>  I thought I could join this with HCV using either geocoordinates or mailing addresses but, after punishingly long run times, produced only meagre results.  Since the data contain the 2010 census block group (bg2010) they can add context to HCV.

```{r}

html(desc_mcRentalsPp)

```


### **Summary of the mcPp Data Set** {#sddSection6}
[{previous}](#sddSection5)|[{toc}](#sddSection0)|[{next}](#sddSection7)
---------------|------------|----------
<br>

>  Again this is sourced from the Maryland Parcel Point data set filtered for Montgomery County and puportedly contains all properties in Montgomery County. At this point, it was used as is as the source for the mcRentalsPp data set.  Subsequently it will be cleaned and used to provide context to all properties within each census block group.

```{r}

html(desc_mcPP)

```


### **Summary of the mc311hca Data Set** {#sddSection7}
[{previous}](#sddSection6)|[{toc}](#sddSection0)|[{next}](#sddSection8)
---------------|------------|----------
<br>

>  The mc311hca data set records the calls received by the County's 311 Customer Service System relayed to the Department of Housing and Community Affairs (DHCA aka HCA).  Many of these calls do not relate to code violations, however, a large majority of housing violations appear to originate from 311 calls.  Most of the columns relate to political oversight and service level agreement compliance.

```{r}

html(desc_mc311hca)

```


### **Visualizations: Alluvial Plots Overview** {#sddSection8}
[{previous}](#sddSection7)|[{toc}](#sddSection0)|[{next}](#sddSection8a)
---------------|------------|----------
<br>

```{r}
alluvialBasePlot
```

> **Alluvial Plots** are variations of [Napoleon's March to Russia](https://datavizblog.files.wordpress.com/2013/05/map-full-size1.png) and [Sankey diagrams](https://en.wikipedia.org/wiki/Sankey_diagram). They shine in many ways:

*  showing connections between multiple categorical variables. 
*  including numeric variables through binning
*  creating a storyboard by copying the right most variable to the left of the next plot.

>  They are implemented in R by the [ggalluvial package](https://cran.r-project.org/web/packages/ggalluvial/vignettes/ggalluvial.html) which is an add on to ggplot2.  This capability exists in [python](https://medium.com/plotly/4-interactive-sankey-diagram-made-in-python-3057b9ee8616) and can be replicated in [Tableau](https://www.census.gov/library/visualizations/interactive/young-adults-higher-education.html).



### **Visualizations: Alluvial Plots by Date and Distance** {#sddSection8a}
[{previous}](#sddSection8)|[{toc}](#sddSection0)|[{next}](#sddSection8b)
---------------|------------|----------
<br>

```{r}
alluvialBasePlot
```


```{r}

alluvialDistDirPlot

```

### **Visualizations: Alluvial Plots by Habitability and Safety** {#sddSection8b}
[{previous}](#sddSection8a)|[{toc}](#sddSection0)|[{next}](#sddSection9)
---------------|------------|----------

```{r}

alluvialHabitabilityPlot

```


```{r}

alluvialSafetyPlot

```

### **Data Sources** {#sddSection9}
[{previous}](#sddSection8b)|[{toc}](#sddSection0)|[{next}](#sddSection10)
---------------|------------|----------
<br>

The [**Maryland Property Data - Parcel Points**](https://data.imap.maryland.gov/datasets/maryland-property-data-parcel-points/data?where=JURSCODE%20%3D%20%27MONT%27), filtered for Montgomery County

>  This describes all 344K properties in Montgomery County.  In addition to property address, it contains key data including geographic location and census block groups that allow it to be joined to both County and U.S. Census data sets. It has interesting items such as property owner; number of dwelling units; and dates of last inspection, sale, and construction.  Indicators of owner occupancy and residential property allow filtering of rental property.

[**Data Montgomery Housing Code Violations**](https://data.montgomerycountymd.gov/Consumer-Housing/Housing-Code-Violations/k9nj-z35d)

>  This contains 470K housing code violations dating from 2013.  It serves as the primary data source for this project.  Although it catalogs only violations, the case number id provides an estimate of total cases including those without infractions. It describes the items in violation, the code citations, corrective actions required and the 311 service complaint. It provides dates of filing, assignment, inspection, correction and closure. 

[**Data Montgomery Troubled Property Analysis**](https://data.montgomerycountymd.gov/Consumer-Housing/Troubled-Properties-Analysis/bw2r-araf)

> This apparently identifies the properties currently subject to more stringent inspections and corrective action plans.  Its case number links back to the Housing Code Violation data set and may be useful to extract other cases with severe violations.

[**U.S. Census 2018 American Community Survey (ACS) extract for Montgomery County Block Groups**](https://data.census.gov/cedsci/table?tid=ACSDT5Y2018.B25032&vintage=2018&layer=blockgroup&t=Owner%2FRenter%20%28Householder%29%20Characteristics&g=0500000US24031.150000&hidePreview=false&cid=B11001A_001E)

>  This data set provides estimates of the number of units in owner and renter occupied properties in each census block in Montgomery County. The estimates are based on data sampled between 2014 and 2018.  

**Other Data Montgomery data sets and text sources to be used in the project include:**

*  To determine the number and position of DHCA code inspectors: Employee Salaries ( [2014](https://data.montgomerycountymd.gov/Human-Resources/Employee-Salaries-2014/54rh-89p8), [2015](https://data.montgomerycountymd.gov/Human-Resources/Employee-Salaries-2015/6rqk-pdub), [2016](https://data.montgomerycountymd.gov/Human-Resources/Employee-Salaries-2016/xj3h-s2i7), [2017](https://data.montgomerycountymd.gov/Human-Resources/Employee-Salaries-2017/2qd6-mr43), [2018](https://data.montgomerycountymd.gov/Human-Resources/Employee-Salaries-2018/kdqy-4wzv) ) 
*  To compare the service requests referred to DHCA to those resulting in cited violations: [MC311 Service Requests](https://data.montgomerycountymd.gov/Government/MC311-Service-Requests/xtyh-brr2/data)
*  To determine the geographic boundaries of Census Block Groups: [Census Block Groups 2010](https://data.montgomerycountymd.gov/Technology/Census-Block-Groups-2010-geographic-data-/y2z8-tsry)
*  The [County Code](http://montgomeryco-md.elaws.us/code/coor_ptii), [Housing Code Enforcement Handbook](https://www.montgomerycountymd.gov/DHCA/Resources/Files/community/code/handbook_eng.pdf),and  [Bill 19-15](https://www.montgomerycountymd.gov/COUNCIL/Resources/Files/bill/2015/Packets/20150618_1.pdf)


### **Rmd Code** {#sddSection10}
[{previous}](#sddSection9)|[{toc}](#sddSection0)|
---------------|------------|----------
<br>

>  see [mocoCleanAndCombine.Rmd](https://github.com/sdutky/mcData205/blob/master/mcHousingCodeViolations/mocoCleanAndCombine.Rmd) on GitHub

```{r}

rmdCode<-read_file("hcvProjectPlanProgress.Rmd")
cat(rmdCode)

```

@


1.1
log
@Initial revision
@
text
@d10 4
a13 1
#$Log$
d17 1
a17 1
```{r setup, include=FALSE}
d90 1
d242 1
d244 1
d252 1
d254 1
d259 1
d261 1
d299 8
@
